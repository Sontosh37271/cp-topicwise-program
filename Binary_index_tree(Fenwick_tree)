#include<bits/stdc++.h>
using namespace std;

vector<int> bit;
// for finding the result of index 1 to index id
int query(int id){
    int ans = 0;
    while(id){
        ans += bit[id];
        id -= (id & -id); // last set bit k bad dilam 
    }
}

// for update the value of a specifix index and then modify the bit array also
int update(int id, int val){
    int n = bit.size()-1; // size of the input array.
    while(id<=n){
        bit[id] += val;
        id += (id & -id);
    }
}

int main(){
    int n;
    cin>>n;
    bit = vector<int>(n+1,0);  // it is bit array that I build
    vector<int> a(n+1);
    for(int i=1;i<=n;i++){
        cin>>a[i];
        update(i,a[i]);
    }
    // the number of query is q
    int q;
    cin>>q;
    while(q--){
      int typeofQuery;
      cin>>typeofQuery;
      if(typeofQuery == 1){  // find the range sum
         int l,r;
         cin>>l>>r;
         int ans = query(r) - query(l-1);
         cout<<ans;
      }
      else {     // point update 
         int id,val;
         cin>>id>>val;
         update(id,-a[id]); // first make it back to 0
         a[id] = val;
         update(id,a[id]); // update the bit array;
      }
    }
}
